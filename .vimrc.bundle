set nocompatible               " be iMproved

if has('vim_starting')
  set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

call neobundle#rc(expand('~/.vim/bundle/'))

" Edit {{{
  " NERD_commenter.vim :toggle comment via <Leader>c<space>
  NeoBundle 'scrooloose/nerdcommenter.git'

  " auto close parentheses
  " NeoBundle 'yuroyoro/vim-autoclose'

  " reorder method chain via --
  NeoBundle 'c9s/cascading.vim'

  " visually indent guide
  NeoBundle 'nathanaelkane/vim-indent-guides'

  " Power to edi xml and html
  NeoBundle 'xmledit'

  " Align
  NeoBundle 'Align'

  " Filtering and reordering
  NeoBundle 'godlygeek/tabular'

  " Reorder text even if multi byte
  NeoBundle 'h1mesuke/vim-alignta'

  " YankRing.vim
  NeoBundle 'YankRing.vim'

  " Chase undo
  NeoBundle 'Gundo'

  " surround.vim : surround text and comment with parentheses
  NeoBundle 'surround.vim'

  " smartchr.vim : reorder nearby ==
  NeoBundle 'smartchr'

  " vim-operator-user : easy operator definition
  NeoBundle 'operator-user'

  " operator-camelize : change camel-case
  NeoBundle 'operator-camelize'

  " operator-replace : replace with yank ring
  NeoBundle 'operator-replace'

  " textobj-user : make vim object easily
  NeoBundle 'textobj-user'

  " vim-textobj-syntax : change selected text to text object
  NeoBundle 'kana/vim-textobj-syntax.git'

  " vim-textobj-plugins : change to text object
  NeoBundle 'thinca/vim-textobj-plugins.git'

  " vim-textobj-lastpat : change last searched text to text object
  NeoBundle 'kana/vim-textobj-lastpat.git'

  " vim-textobj-indent : convert indented text to text object
  NeoBundle 'kana/vim-textobj-indent.git'

  " vim-textobj-function : convert function text to text object
  NeoBundle 'kana/vim-textobj-function.git'

  " vim-textobj-fold : convet folded text to text object
  NeoBundle 'kana/vim-textobj-fold.git'
  NeoBundle 'textobj-rubyblock'

  " vim-textobj-entire : convert buffer to text-object
  NeoBundle 'textobj-entire'

  " convert 「foo」 or 【bar】to text-object
  NeoBundle 'textobj-jabraces'

  " toggle true/false and so on via <C-a>
  NeoBundle 'taku-o/vim-toggle'

  " VIM-LESS : for the dynamic stylesheet language LESS.
  NeoBundle 'groenewege/vim-less.git'

  " vim-haml Vim runtime files for Haml,  Sass,  and SCSS
  NeoBundle 'tpope/vim-haml.git'

  " neocomplcache.vim
  NeoBundle 'Shougo/neocomplcache', '', 'default'
  call neobundle#config('neocomplcache',  {
        \ 'lazy' : 1,
        \ 'autoload' : {
        \   'insert' : 1,
        \ }})

  " neosnipet.vim
  NeoBundle 'Shougo/neosnippet', '', 'default'
  call neobundle#config('neosnippet', {
        \ 'lazy' : 1,
        \ 'autoload' : {
        \   'insert' : 1,
        \   'filetypes' : 'snippet',
        \   'unite_sources' : ['snippet', 'neosnippet/user', 'neosnippet/runtime'],
        \ }})

  " autocomplete require in ruby
  NeoBundle 'ujihisa/neco-ruby'

  " A neocomplcache plugin for English, using look command
  " NeoBundle 'ujihisa/neco-look'
" }}}

" Searching/Moving{{{
  NeoBundle 'Smooth-Scroll'

  " vim-smartword : smart word moving
  NeoBundle 'smartword'

  " highlight <motion via Leader><Leader>w/f
  NeoBundle 'EasyMotion'

  " matchit.vim : move to corresponding parentheses via %
  NeoBundle 'matchit.zip'

  " expand ruby matchit
  NeoBundle 'ruby-matchit'

  " grep.vim
  NeoBundle 'grep.vim'

  " eregex.vim : enable ruby or perl regular expression via %S/perlregex/
  NeoBundle 'eregex.vim'

  " open-browser.vim : open url or search under coursor
  NeoBundle 'tyru/open-browser.vim'

  " ag.vim
  NeoBundle 'rking/ag.vim'
" }}}

" Programming {{{
  " quickrun.vim
  NeoBundle 'thinca/vim-quickrun'

  " see refference such as perldoc and phpmanual on vim
  NeoBundle 'thinca/vim-ref'

  " see ri doc on vim
  NeoBundle 'taka84u9/vim-ref-ri.git'

  " SQLUtilities : SQL generator
  NeoBundle 'SQLUtilities'

  " vim-ruby
  NeoBundle 'vim-ruby/vim-ruby'

  " rails.vim
  NeoBundle 'tpope/vim-rails'

  " play2vim
  NeoBundle 'gre/play2vim.git'

  " Pydiction : for python
  " NeoBundle 'Pydiction'

  " Show tablist on source
  NeoBundle 'taglist.vim'

  " auto generator for tags
  NeoBundle 'Source-Explorer-srcexpl.vim'

  " conject NERD_tree, taglist, srcexpl
  NeoBundle 'trinity.vim'
" }}}

" Syntax {{{
  " haml
  NeoBundle 'haml.zip'

  " JavaScript
  NeoBundle 'JavaScript-syntax'

  " jQuery
  NeoBundle 'jQuery'

  " nginx conf
  NeoBundle 'nginx.vim'

  " markdown
  NeoBundle 'tpope/vim-markdown'

  " coffee script
  NeoBundle 'kchmck/vim-coffee-script'

  " python
  NeoBundle 'yuroyoro/vim-python'

  " scala
  NeoBundle 'derekwyatt/vim-scala'

  " syntax checking plugins exist for eruby, haml, html, javascript, php, python, ruby and sass.
  NeoBundle 'scrooloose/syntastic'

  " vim-slim
  NeoBundle 'slim-template/vim-slim.git'
" }}}

" Buffer {{{
  " DumbBuf.vim : handle buffer like quickbuf "<Leader>b<Space>BufferList
  NeoBundle 'DumbBuf'

  " minibufexpl.vim: manage buffers like tab window
  NeoBundle 'minibufexpl.vim'

  " NERDTree : explorer like tree
  NeoBundle 'The-NERD-tree'
" }}}

" Utility {{{

  " vimshell
  NeoBundle 'Shougo/vimshell.git'

  " vimproc : asynchronous executin from vimshell
  NeoBundle 'Shougo/vimproc.git', { 'build': {
  \         'mac' : 'make -f make_mac.mak',
  \         'unix': 'make -f make_unix.mak',
  \        },
  \}

  " vim-altercmd : expand Ex command
  NeoBundle 'tyru/vim-altercmd'

  " vim Interface to Web API
  NeoBundle 'mattn/webapi-vim'

  " cecutil.vim : for utility for another plugin
  NeoBundle 'cecutil'

  " urilib.vim : handle url from vim script
  NeoBundle 'tyru/urilib.vim.git'

  " utillity
  NeoBundle 'L9'

  " Library for Buffer
  NeoBundle 'thinca/vim-openbuf'

  " vimdoc japanese
  NeoBundle 'yuroyoro/vimdoc_ja'

  " Lingr client
  NeoBundle 'tsukkee/lingr-vim'

  " GIT from vim
  NeoBundle 'tpope/vim-fugitive'

  " Cool status line
  NeoBundle 'bling/vim-airline'

  " perlomni.vim
  " NeoBundle 'perlomni.vim'

  " perl-vim
   NeoBundle 'petdance/vim-perl'

   "Indent-Guides
   NeoBundle 'Indent-Guides'

" }}}

" ColorSchema{{{{
  " color schema 256
  " NeoBundle 'desert256.vim'
  " NeoBundle 'mrkn256.vim'
  " NeoBundle 'tomasr/molokai'
  NeoBundle 'yuroyoro/yuroyoro256.vim'
" }}}

" Unite {{{{
  " unite.vim
  NeoBundle 'Shougo/unite.vim'
  NeoBundle 'tsukkee/unite-help'
  NeoBundle 'h1mesuke/unite-outline'
  " NeoBundle 'Sixeight/unite-grep'
  NeoBundle 'basyura/unite-rails'
  NeoBundle 'thinca/vim-unite-history'
  NeoBundle 'tsukkee/unite-tag'
  NeoBundle 'choplin/unite-vim_hacks'
" }}}


filetype plugin indent on

NeoBundleCheck
