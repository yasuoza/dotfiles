# vim: set expandtab :

[toplevel]

# List alias commands
aliases = !f() { cut -f 1 -d '=' $HOME/.aws/cli/alias | grep -E '^[a-z]+' | grep -v 'aliases' | sort; }; f

whoami = sts get-caller-identity

# List or set your region
region = !f() { [[ $# -eq 1 ]] && aws configure set region "$1" || aws configure get region; }; f

myip =
  !f() {
    dig +short -4 myip.opendns.com @resolver1.opendns.com
  }; f

latest-spot-price = !f() {
    region=${2:-$AWS_DEFAULT_REGION}
    max_items=${3:-2} # Default 2 histories
    aws ec2 describe-spot-price-history \
      --instance-type "$1" \
      --product-description 'Linux/UNIX' \
      --region "$region" \
      --max-items "$max_items" \
      --query 'sort_by(SpotPriceHistory[].{Az: AvailabilityZone, Price: SpotPrice, InstanceType: InstanceType, Timestamp: Timestamp}, &Price)'
  }; f

list-ec2-instances = \
  ec2 describe-instances --query \
  "Reservations[].Instances[].{Instance:InstanceId,Name:Tags[?Key=='Name'].Value|[0],PublicIP:PublicIpAddress,State:State.Name}"

# Start session powered by fzf
ssm-start-session =
  !f() {
    region=${1:-$AWS_DEFAULT_REGION}
    instance_id=$(aws ec2 describe-instances \
        --region $region \
        --query 'Reservations[].Instances[].[InstanceId, State.Name, InstanceType, PrivateIpAddress, Platform || `Linux`, Tags[?Key == `Name`].Value | [0]]' \
        --output text | column -t | fzf-tmux --reverse | cut -d ' ' -f 1)
    aws ssm start-session --target ${instance_id} --region $region
  }; f
