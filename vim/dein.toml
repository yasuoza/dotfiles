[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'roxma/nvim-yarp'
if = '!has("nvim")'
[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
if = '!has("nvim")'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

# NERD_commenter.vim :toggle comment via <Leader>c<space>
[[plugins]]
repo = 'scrooloose/nerdcommenter'
hook_add = '''
  " put space between comment
  let NERDSpaceDelims = 1
  " do not show error although opening incorrect file
  let NERDShutUp=1
'''
# visually indent guide
[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
  let g:indentLine_char = 'Â¦'
'''
[[plugins]]
repo = 'LeafCage/yankround.vim'
hook_add ='''
  nmap p <Plug>(yankround-p)
  xmap p <Plug>(yankround-p)
  nmap P <Plug>(yankround-P)
  nmap gp <Plug>(yankround-gp)
  xmap gp <Plug>(yankround-gp)
  nmap gP <Plug>(yankround-gP)
  nmap <C-p> <Plug>(yankround-prev)
  nmap <C-n> <Plug>(yankround-next)
  let g:yankround_dir = '~/.cache/vim/yankround'
'''

# # viaualstar : search *
[[plugins]]
repo = 'thinca/vim-visualstar'

# # surround.vim : surround text and comment with parentheses
[[plugins]]
repo = 'vim-scripts/surround.vim'

# # vim-textobj-syntax : change selected text to text object
[[plugins]]
repo = 'kana/vim-textobj-user'
[[plugins]]
repo = 'kana/vim-textobj-syntax.git'

# vim-textobj-fold : convet folded text to text object
[[plugins]]
repo = 'kana/vim-textobj-fold.git'

# vim-textobj-entire : convert buffer to text-object
[[plugins]]
repo = 'vim-scripts/textobj-entire'

# Speed up foldmethod
[[plugins]]
repo = 'Konfekt/FastFold'

# vim-smartword : smart word moving
[[plugins]]
repo = 'vim-scripts/smartword'

# Replace matchit.vim
[[plugins]]
repo = 'andymass/vim-matchup'
hook_add = '''
  let g:matchup_matchparen_deferred = 1 " improves cursor movement performance
  let g:matchup_matchparen_deferred_show_delay = 100 " slow deferred highlighting
  let g:matchup_matchparen_deferred_hide_delay = 100 " fast highlighting disappears
  let g:matchup_matchparen_stopline = 100  " for match highlighting only
  let g:matchup_matchparen_offscreen = {} " Disable statusline entry
'''

[[plugins]]
repo = 'thinca/vim-quickrun'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'mattn/vim-molder'

[[plugins]]
repo = 'mileszs/ack.vim'
hook_add = '''
  " Use `:Ack` without jumping to first result.
  cnoreabbrev Ack Ack!

  " Use the_silver_searcher
  let g:ackprg = 'ag --vimgrep'

  " Mappings
  " e: Open and close quickfix
  " v: Open right and close quickfix
  let g:ack_mappings = {
    \ "e": "<CR><C-W><C-W>:ccl<CR>zz",
    \ "v": "<C-W><CR><C-W>L<C-W>p<C-W>J<C-W>p<C-W>:ccl<CR>zz",
  \ }
'''

# Cool colors
[[plugins]]
repo = 'bling/vim-airline'
hook_add = '''
  let g:airline#extensions#tabline#enabled = 1
  let g:airline#extensions#tabline#buffer_nr_show = 1
  let g:airline#extensions#tabline#buffer_nr_format = '[%s]'
  let g:airline#extensions#tabline#formatter = 'unique_tail_improved'
  let g:airline#extensions#tabline#ignore_bufadd_pat =
    \ 'defx|gundo|nerd_tree|startify|tagbar|term://|undotree|vimfiler'

  " statusline
  let g:airline_powerline_fonts = 1  " Use powerline patched font
  let g:airline_section_c = '%F%m'   " Display full file path
  let g:airline#extensions#whitespace#enabled = 0

  " Disable coc integration
  let g:airline#extensions#coc#enabled = 0
'''

[[plugins]]
repo = 'cocopon/iceberg.vim'
hook_add = '''
  let g:airline_theme='iceberg' " Use hybrid statusline theme
'''
hook_post_source = '''
  hi! Visual ctermbg=236 guibg=#3C4154  " Change Visual color
'''
