[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'roxma/nvim-yarp'
if = '!has("nvim")'
[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
if = '!has("nvim")'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'nathom/filetype.nvim'

# NERD_commenter.vim :toggle comment via <Leader>c<space>
[[plugins]]
repo = 'scrooloose/nerdcommenter'
hook_add = '''
  " put space between comment
  let NERDSpaceDelims = 1
  " do not show error although opening incorrect file
  let NERDShutUp=1
'''

# visually indent guide
[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
  let g:indentLine_char = 'Â¦'
'''

[[plugins]]
repo = 'LeafCage/yankround.vim'
hook_add ='''
  nmap p <Plug>(yankround-p)
  xmap p <Plug>(yankround-p)
  nmap P <Plug>(yankround-P)
  nmap gp <Plug>(yankround-gp)
  xmap gp <Plug>(yankround-gp)
  nmap gP <Plug>(yankround-gP)
  nmap <C-p> <Plug>(yankround-prev)
  nmap <C-n> <Plug>(yankround-next)
  let g:yankround_dir = '~/.cache/vim/yankround'
'''

# viaualstar : search *
[[plugins]]
repo = 'thinca/vim-visualstar'

# surround.vim : surround text and comment with parentheses
[[plugins]]
repo = 'vim-scripts/surround.vim'

# Insert or delete brackets, parens, quotes in pair
[[plugins]]
repo = 'LunarWatcher/auto-pairs'
hook_add = '''
  " Disable `{|word` to be `{|}word`
  let g:AutoPairsCompleteOnlyOnSpace = 1

  " Disable mappings
  let g:AutoPairsShortcutToggle = 0
  let g:AutoPairsShortcutFastWrap = 0
  let g:AutoPairsShortcutJump = 0
  let g:AutoPairsShortcutBackInsert = 0

  " Backspace and Ctrl-H delete pairs
  let g:AutoPairsMapBS = 1
  inoremap <silent> <C-h> <C-R>=autopairs#AutoPairsDelete()<CR>
'''

# vim-textobj-syntax : change selected text to text object
[[plugins]]
repo = 'kana/vim-textobj-user'
[[plugins]]
repo = 'kana/vim-textobj-syntax.git'

# vim-textobj-fold : convet folded text to text object
[[plugins]]
repo = 'kana/vim-textobj-fold.git'

# vim-textobj-entire : convert buffer to text-object
[[plugins]]
repo = 'vim-scripts/textobj-entire'

# Speed up foldmethod
[[plugins]]
repo = 'Konfekt/FastFold'

# vim-smartword : smart word moving
[[plugins]]
repo = 'vim-scripts/smartword'

# Replace matchit.vim
[[plugins]]
repo = 'andymass/vim-matchup'
hook_add = '''
  let g:matchup_matchparen_deferred = 1 " improves cursor movement performance
  let g:matchup_matchparen_deferred_show_delay = 100 " slow deferred highlighting
  let g:matchup_matchparen_deferred_hide_delay = 100 " fast highlighting disappears
  let g:matchup_matchparen_stopline = 100  " for match highlighting only
  let g:matchup_matchparen_offscreen = {} " Disable statusline entry
'''

[[plugins]]
repo = 'thinca/vim-quickrun'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'mattn/vim-molder'

[[plugins]]
repo = 'junegunn/fzf'
merged = 0

[[plugins]]
repo = 'junegunn/fzf.vim'
merged = 0
hook_add = '''
  " Like CtrlP
  noremap <silent> <C-\> :Files<Enter>

  " <Leader>lb opens buffer list
  function! s:buflist()
    redir => ls
    silent ls
    redir END
    return split(ls, '\n')
  endfunction

  nnoremap <silent> <Leader>lb :Buffers<Enter>

  " Use ctrl-j and ctrl-k to preview window page up and down
  let s:preview_option = { 'options': ['--bind', 'ctrl-j:preview-half-page-down,ctrl-k:preview-half-page-up'] }

  " Customize Files
  command! -bang -nargs=? -complete=dir Files
      \ call fzf#vim#files(<q-args>, fzf#vim#with_preview(s:preview_option), <bang>0)

  if executable('rg')
    command! -bang -nargs=* Rg
      \ call fzf#vim#grep(
      \   'rg --column --line-number --no-heading --color=always --smart-case -- '.shellescape(expand('<cword>')), 1,
      \   fzf#vim#with_preview(s:preview_option), <bang>0)
  endif
'''

# Cool colors
[[plugins]]
repo = 'bling/vim-airline'
hook_add = '''
  let g:airline#extensions#tabline#enabled = 1
  let g:airline#extensions#tabline#buffer_nr_show = 1
  let g:airline#extensions#tabline#buffer_nr_format = '[%s]'
  let g:airline#extensions#tabline#formatter = 'unique_tail_improved'
  let g:airline#extensions#tabline#ignore_bufadd_pat =
    \ 'defx|gundo|nerd_tree|startify|tagbar|term://|undotree|vimfiler'

  " statusline
  let g:airline_powerline_fonts = 1  " Use powerline patched font
  let g:airline_section_c = '%F%m'   " Display full file path
  let g:airline#extensions#whitespace#enabled = 0

  " Disable coc integration
  let g:airline#extensions#coc#enabled = 0

  " Disable error and warning section
  let g:airline_section_error = ''
  let g:airline_section_warning = ''
'''

[[plugins]]
repo = 'cocopon/iceberg.vim'
hook_add = '''
  let g:airline_theme='iceberg' " Use hybrid statusline theme
'''
hook_post_source = '''
  hi! Normal guibg=NONE ctermbg=NONE " Transparent background

  hi! Visual ctermbg=236 guibg=#3C4154  " Change Visual color
'''
