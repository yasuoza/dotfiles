[[plugins]]
repo = 'neoclide/coc.nvim'
merged = 0
rev = 'release'
hook_add = '''
  " Use K to show documentation in preview window
  nnoremap <silent> K :call <SID>show_documentation()<CR>
  function! s:show_documentation()
    if (index(['vim','help'], &filetype) >= 0)
      execute 'h '.expand('<cword>')
    else
      call CocAction('doHover')
    endif
  endfunction

  " Jump definition respecting for tags file.
  function! s:jump_definition()
    let tags_file = findfile('tags', expand('%:p:h').';'.$HOME, 1)
    let ruby_filetypes = ['ruby', 'eruby', 'slim']
    if match(ruby_filetypes, &filetype) != -1 && filereadable(expand(tags_file))
      execute 'tag '.RubyCursorTag()
    else
      call CocAction('jumpDefinition')
    endif
  endfunction
  nmap <silent> <C-]> :call <SID>jump_definition()<CR>

  " TAB triggers completion
  inoremap <silent><expr> <TAB>
    \ pumvisible() ? coc#_select_confirm() :
    \ coc#expandableOrJumpable() ?
    \ "\<C-r>=coc#rpc#request('doKeymap', ['snippets-expand-jump',''])\<CR>" :
    \ <SID>check_back_space() ? "\<TAB>" :
    \ coc#refresh()

  function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~# '\s'
  endfunction

  let g:coc_snippet_next = '<TAB>'

  " Scroll floating window
	if has('nvim-0.4.0') || has('patch-8.2.0750')
	  nnoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? coc#float#scroll(1) : "\<C-f>"
	  nnoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? coc#float#scroll(0) : "\<C-b>"
	  inoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? "\<c-r>=coc#float#scroll(1)\<cr>" : "\<Right>"
	  inoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? "\<c-r>=coc#float#scroll(0)\<cr>" : "\<Left>"
	  vnoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? coc#float#scroll(1) : "\<C-f>"
	  vnoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? coc#float#scroll(0) : "\<C-b>"
  endif
'''

[[plugins]]
repo = 'neoclide/coc-snippets'
merged = 0
build = 'yarn install --frozen-lockfile'

[[plugins]]
repo = 'neoclide/coc-highlight'
merged = 0
build = 'yarn install --frozen-lockfile'

[[plugins]]
repo = 'neoclide/coc-tsserver'
merged = 0
build = 'yarn install --frozen-lockfile'

[[plugins]]
repo = 'neoclide/coc-prettier'
merged = 0
build = 'yarn install --frozen-lockfile'

[[plugins]]
repo = 'neoclide/coc-json'
merged = 0
build = 'yarn install --frozen-lockfile'

[[plugins]]
repo = 'neoclide/coc-solargraph'
merged = 0
build = 'yarn install --frozen-lockfile'

[[plugins]]
repo = 'neoclide/coc-yaml'
merged = 0
build = 'yarn install --frozen-lockfile'

[[plugins]]
repo = 'neoclide/coc-html'
merged = 0
build = 'yarn install --frozen-lockfile'

[[plugins]]
repo = 'neoclide/coc-css'
merged = 0
build = 'yarn install --frozen-lockfile'

[[plugins]]
repo = 'fannheyward/coc-sql'
merged = 0
build = 'yarn install --frozen-lockfile'

[[plugins]]
repo = 'fannheyward/coc-pyright'
merged = 0
build = 'yarn install --frozen-lockfile'
